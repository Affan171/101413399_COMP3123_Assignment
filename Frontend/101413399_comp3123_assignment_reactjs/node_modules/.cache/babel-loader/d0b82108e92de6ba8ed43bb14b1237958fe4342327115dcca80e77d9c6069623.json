{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Affan\\\\COMP3123_Assignment\\\\Frontend\\\\101413399_comp3123_assignment_reactjs\\\\src\\\\components\\\\Employee\\\\EmployeeList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { deleteEmployee, fetchEmployees } from \"../../Services/employeeService\";\nimport AddEmployee from \"./AddEmployee\";\nimport EditEmployee from \"./EditEmployee\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmployeeList = () => {\n  _s();\n  const [employees, setEmployees] = useState([]);\n  const [editingEmployee, setEditingEmployee] = useState(null);\n  const [error, setError] = useState(\"\");\n\n  // Fetch employees when the component mounts\n  useEffect(() => {\n    loadEmployees();\n  }, []);\n  const loadEmployees = async () => {\n    try {\n      const employees = await fetchEmployees();\n      console.log('Data received from backend:', employees);\n      setEmployees(employees);\n    } catch (error) {\n      console.log(\"Error fetching employees:\", error);\n      setError(\"Failed to fetch employees. Please try again.\");\n    }\n  };\n  const handleDelete = async id => {\n    try {\n      await deleteEmployee(id);\n      // Why dont we call loadEmployees here to show the updated list\n      // because when we delete the employee it would be deleted from\n      // the database? Making another call to API would cause server load and network latency.\n      setEmployees(employees.filter(employee => employee._id !== id));\n    } catch (error) {\n      console.error(\"Error fetching employees:\", error);\n      setError(\"Failed to delete employee.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Employee Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(AddEmployee, {\n      onEmployeeAdded: loadEmployees\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), employees.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Position\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: employees.map(employee => {\n          /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: [employee.first_name, \" \", employee.last_name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [employee.email, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [employee.position, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setEditingEmployee(employee),\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDelete(employee._id),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }, this)]\n          }, employee._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No employees found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this), editingEmployee && /*#__PURE__*/_jsxDEV(EditEmployee, {\n      employee: editingEmployee,\n      onEmployeeAdded: loadEmployees,\n      onClose: () => setEditingEmployee(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(EmployeeList, \"8XAD88lTgiFTSbyUMFSCMx23jq8=\");\n_c = EmployeeList;\nexport default EmployeeList;\nvar _c;\n$RefreshReg$(_c, \"EmployeeList\");","map":{"version":3,"names":["React","useEffect","useState","deleteEmployee","fetchEmployees","AddEmployee","EditEmployee","jsxDEV","_jsxDEV","EmployeeList","_s","employees","setEmployees","editingEmployee","setEditingEmployee","error","setError","loadEmployees","console","log","handleDelete","id","filter","employee","_id","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","onEmployeeAdded","length","map","first_name","last_name","email","position","onClick","onClose","_c","$RefreshReg$"],"sources":["C:/Users/Affan/COMP3123_Assignment/Frontend/101413399_comp3123_assignment_reactjs/src/components/Employee/EmployeeList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { deleteEmployee, fetchEmployees } from \"../../Services/employeeService\";\r\nimport AddEmployee from \"./AddEmployee\";\r\nimport EditEmployee from \"./EditEmployee\";\r\n\r\nconst EmployeeList = () => {\r\n  const [employees, setEmployees] = useState([]);\r\n  const [editingEmployee, setEditingEmployee] = useState(null);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  // Fetch employees when the component mounts\r\n  useEffect(() => {\r\n    loadEmployees();\r\n  }, []);\r\n\r\n  const loadEmployees = async () => {\r\n    try {\r\n      const employees = await fetchEmployees();\r\n      console.log('Data received from backend:', employees);\r\n      setEmployees(employees);\r\n    } catch (error) {\r\n      console.log(\"Error fetching employees:\", error);\r\n      setError(\"Failed to fetch employees. Please try again.\");\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    try {\r\n      await deleteEmployee(id);\r\n      // Why dont we call loadEmployees here to show the updated list\r\n      // because when we delete the employee it would be deleted from\r\n      // the database? Making another call to API would cause server load and network latency.\r\n      setEmployees(employees.filter((employee) => employee._id !== id));\r\n    } catch (error) {\r\n      console.error(\"Error fetching employees:\", error);\r\n      setError(\"Failed to delete employee.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Employee Management</h1>\r\n\r\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n\r\n      <AddEmployee onEmployeeAdded={loadEmployees} />\r\n\r\n      {employees.length > 0 ? (\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Name</th>\r\n              <th>Email</th>\r\n              <th>Position</th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {employees.map((employee) => {\r\n              <tr key={employee._id}>\r\n                <td>\r\n                  {employee.first_name} {employee.last_name}\r\n                </td>\r\n                <td>{employee.email} </td>\r\n                <td>{employee.position} </td>\r\n                <td>\r\n                  <button onClick={() => setEditingEmployee(employee)}>\r\n                    Edit\r\n                  </button>\r\n                  <button onClick={() => handleDelete(employee._id)}>\r\n                    Delete\r\n                  </button>\r\n                </td>\r\n              </tr>;\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      ) : (\r\n        <p>No employees found</p>\r\n      )}\r\n\r\n      {editingEmployee && (\r\n        <EditEmployee\r\n          employee={editingEmployee}\r\n          onEmployeeAdded={loadEmployees}\r\n          onClose={() => setEditingEmployee(null)}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmployeeList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}