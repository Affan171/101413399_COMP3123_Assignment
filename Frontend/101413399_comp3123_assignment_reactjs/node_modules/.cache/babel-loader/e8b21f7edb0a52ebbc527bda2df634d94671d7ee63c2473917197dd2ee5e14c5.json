{"ast":null,"code":"import api from './api';\n\n// Fetch all employees\nexport const fetchEmployees = async () => {\n  try {\n    const response = await api.get('/employee/employees'); // Matches GET /api/v1/employee/employees\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching employees:', error);\n    throw error; // Rethrow for the caller to handle\n  }\n};\n\n// Fetch a single employee by ID\nexport const fetchEmployeeById = async id => {\n  try {\n    const response = await api.get(`/employee/employees/${id}`); // Matches GET /api/v1/employee/employees/:id\n    return response.data;\n  } catch (error) {\n    console.error(`Error fetching employee with ID ${id}:`, error);\n    throw error;\n  }\n};\n\n// Add a new employee\nexport const addEmployee = async data => {\n  try {\n    const response = await api.post('/employee/employees', data); // Matches POST /api/v1/employee/employees\n    return response.data;\n  } catch (error) {\n    console.error('Error adding employee:', error);\n    throw error;\n  }\n};\n\n// Update an existing employee\nexport const updateEmployee = async (id, data) => {\n  try {\n    const response = await api.put(`/employee/employees/${id}`, data); // Matches PUT /api/v1/employee/employees/:id\n    return response.data;\n  } catch (error) {\n    console.error(`Error updating employee with ID ${id}:`, error);\n    throw error;\n  }\n};\n\n// Delete an employee\nexport const deleteEmployee = async id => {\n  try {\n    const response = await api.delete(`/employee/employees/${id}`); // Matches DELETE /api/v1/employee/employees/:id\n    return response.data;\n  } catch (error) {\n    console.error(`Error deleting employee with ID ${id}:`, error);\n    throw error;\n  }\n};","map":{"version":3,"names":["api","fetchEmployees","response","get","data","error","console","fetchEmployeeById","id","addEmployee","post","updateEmployee","put","deleteEmployee","delete"],"sources":["C:/Users/Affan/COMP3123_Assignment/Frontend/101413399_comp3123_assignment_reactjs/src/Services/employeeService.js"],"sourcesContent":["import api from './api';\r\n\r\n// Fetch all employees\r\nexport const fetchEmployees = async () => {\r\n    try {\r\n        const response = await api.get('/employee/employees'); // Matches GET /api/v1/employee/employees\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error fetching employees:', error);\r\n        throw error; // Rethrow for the caller to handle\r\n    }\r\n};\r\n\r\n// Fetch a single employee by ID\r\nexport const fetchEmployeeById = async (id) => {\r\n    try {\r\n        const response = await api.get(`/employee/employees/${id}`); // Matches GET /api/v1/employee/employees/:id\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error(`Error fetching employee with ID ${id}:`, error);\r\n        throw error;\r\n    }\r\n};\r\n\r\n// Add a new employee\r\nexport const addEmployee = async (data) => {\r\n    try {\r\n        const response = await api.post('/employee/employees', data); // Matches POST /api/v1/employee/employees\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error adding employee:', error);\r\n        throw error;\r\n    }\r\n};\r\n\r\n// Update an existing employee\r\nexport const updateEmployee = async (id, data) => {\r\n    try {\r\n        const response = await api.put(`/employee/employees/${id}`, data); // Matches PUT /api/v1/employee/employees/:id\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error(`Error updating employee with ID ${id}:`, error);\r\n        throw error;\r\n    }\r\n};\r\n\r\n// Delete an employee\r\nexport const deleteEmployee = async (id) => {\r\n    try {\r\n        const response = await api.delete(`/employee/employees/${id}`); // Matches DELETE /api/v1/employee/employees/:id\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error(`Error deleting employee with ID ${id}:`, error);\r\n        throw error;\r\n    }\r\n};\r\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,OAAO;;AAEvB;AACA,OAAO,MAAMC,cAAc,GAAG,MAAAA,CAAA,KAAY;EACtC,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMF,GAAG,CAACG,GAAG,CAAC,qBAAqB,CAAC,CAAC,CAAC;IACvD,OAAOD,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACjD,MAAMA,KAAK,CAAC,CAAC;EACjB;AACJ,CAAC;;AAED;AACA,OAAO,MAAME,iBAAiB,GAAG,MAAOC,EAAE,IAAK;EAC3C,IAAI;IACA,MAAMN,QAAQ,GAAG,MAAMF,GAAG,CAACG,GAAG,CAAC,uBAAuBK,EAAE,EAAE,CAAC,CAAC,CAAC;IAC7D,OAAON,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,mCAAmCG,EAAE,GAAG,EAAEH,KAAK,CAAC;IAC9D,MAAMA,KAAK;EACf;AACJ,CAAC;;AAED;AACA,OAAO,MAAMI,WAAW,GAAG,MAAOL,IAAI,IAAK;EACvC,IAAI;IACA,MAAMF,QAAQ,GAAG,MAAMF,GAAG,CAACU,IAAI,CAAC,qBAAqB,EAAEN,IAAI,CAAC,CAAC,CAAC;IAC9D,OAAOF,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAC9C,MAAMA,KAAK;EACf;AACJ,CAAC;;AAED;AACA,OAAO,MAAMM,cAAc,GAAG,MAAAA,CAAOH,EAAE,EAAEJ,IAAI,KAAK;EAC9C,IAAI;IACA,MAAMF,QAAQ,GAAG,MAAMF,GAAG,CAACY,GAAG,CAAC,uBAAuBJ,EAAE,EAAE,EAAEJ,IAAI,CAAC,CAAC,CAAC;IACnE,OAAOF,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,mCAAmCG,EAAE,GAAG,EAAEH,KAAK,CAAC;IAC9D,MAAMA,KAAK;EACf;AACJ,CAAC;;AAED;AACA,OAAO,MAAMQ,cAAc,GAAG,MAAOL,EAAE,IAAK;EACxC,IAAI;IACA,MAAMN,QAAQ,GAAG,MAAMF,GAAG,CAACc,MAAM,CAAC,uBAAuBN,EAAE,EAAE,CAAC,CAAC,CAAC;IAChE,OAAON,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,mCAAmCG,EAAE,GAAG,EAAEH,KAAK,CAAC;IAC9D,MAAMA,KAAK;EACf;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}