{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Affan\\\\COMP3123_Assignment\\\\Frontend\\\\101413399_comp3123_assignment_reactjs\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { fetchEmployees } from './Services/employeeService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [employees, setEmployees] = useState([]);\n  const [error, setError] = useState('');\n\n  // Fetch employees when the component mounts\n  useEffect(() => {\n    const loadEmployees = async () => {\n      try {\n        const response = await fetchEmployees();\n        setEmployees(response.data); // Store employees in state\n      } catch (error) {\n        console.error('Error fetching employees:', error);\n        setError('Failed to fetch employees. Check the console for details.');\n      }\n    };\n    loadEmployees();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"API Test: Fetch Employees\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }, this), \" \", employees.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: employees.map(employee => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [employee.first_name, \" \", employee.last_name, \" - \", employee.position]\n      }, employee._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No employees found or API is not working.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"6LqG5kVfVEIm4gqgIR0Mei2MEqI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","fetchEmployees","jsxDEV","_jsxDEV","App","_s","employees","setEmployees","error","setError","loadEmployees","response","data","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","length","map","employee","first_name","last_name","position","_id","_c","$RefreshReg$"],"sources":["C:/Users/Affan/COMP3123_Assignment/Frontend/101413399_comp3123_assignment_reactjs/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { fetchEmployees } from './Services/employeeService'; \n\nfunction App() {\n  const [employees, setEmployees] = useState([]);\n  const [error, setError] = useState('');\n\n  // Fetch employees when the component mounts\n  useEffect(() => {\n    const loadEmployees = async () => {\n      try {\n        const response = await fetchEmployees();\n        setEmployees(response.data); // Store employees in state\n      } catch (error) {\n        console.error('Error fetching employees:', error);\n        setError('Failed to fetch employees. Check the console for details.');\n      }\n    };\n\n    loadEmployees();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h1>API Test: Fetch Employees</h1>\n      {error && <p style={{ color: 'red' }}>{error}</p>} {/* Show error if any */}\n      {employees.length > 0 ? (\n        <ul>\n          {employees.map((employee) => (\n            <li key={employee._id}>\n              {employee.first_name} {employee.last_name} - {employee.position}\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>No employees found or API is not working.</p>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,WAAW;AAClB,SAASC,cAAc,QAAQ,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;;EAEtC;EACAC,SAAS,CAAC,MAAM;IACd,MAAMU,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMV,cAAc,CAAC,CAAC;QACvCM,YAAY,CAACI,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC;MAC/B,CAAC,CAAC,OAAOJ,KAAK,EAAE;QACdK,OAAO,CAACL,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;QACjDC,QAAQ,CAAC,2DAA2D,CAAC;MACvE;IACF,CAAC;IAEDC,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEP,OAAA;IAAKW,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBZ,OAAA;MAAAY,QAAA,EAAI;IAAyB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACjCX,KAAK,iBAAIL,OAAA;MAAGiB,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAN,QAAA,EAAEP;IAAK;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAAC,GAAC,EAClDb,SAAS,CAACgB,MAAM,GAAG,CAAC,gBACnBnB,OAAA;MAAAY,QAAA,EACGT,SAAS,CAACiB,GAAG,CAAEC,QAAQ,iBACtBrB,OAAA;QAAAY,QAAA,GACGS,QAAQ,CAACC,UAAU,EAAC,GAAC,EAACD,QAAQ,CAACE,SAAS,EAAC,KAAG,EAACF,QAAQ,CAACG,QAAQ;MAAA,GADxDH,QAAQ,CAACI,GAAG;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEjB,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,gBAELhB,OAAA;MAAAY,QAAA,EAAG;IAAyC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAChD;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACd,EAAA,CApCQD,GAAG;AAAAyB,EAAA,GAAHzB,GAAG;AAsCZ,eAAeA,GAAG;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}